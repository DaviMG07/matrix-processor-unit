$date
	Tue Apr 22 11:19:38 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module mpu_tb $end
$var wire 1 ! send $end
$var wire 16 " data_out [15:0] $end
$var reg 1 # clock $end
$var reg 32 $ instruction_in [31:0] $end
$var reg 1 % receive $end
$scope module dut $end
$var wire 1 # clock $end
$var wire 32 & instruction_in [31:0] $end
$var wire 1 % receive $end
$var wire 1 ! send $end
$var wire 4 ' op_code [3:0] $end
$var wire 1 ( mem_write_enabled $end
$var wire 1 ) mem_start $end
$var wire 1 * mem_done $end
$var wire 16 + mem_data_out [15:0] $end
$var wire 16 , mem_data_in [15:0] $end
$var wire 6 - mem_address [5:0] $end
$var wire 200 . matrix_c [199:0] $end
$var wire 16 / instruction_data [15:0] $end
$var wire 5 0 index [4:0] $end
$var wire 2 1 id [1:0] $end
$var wire 16 2 data_out [15:0] $end
$var wire 1 3 alu_start $end
$var wire 1 4 alu_dumping $end
$var wire 1 5 alu_done $end
$var reg 16 6 dumping_data [15:0] $end
$var reg 32 7 instruction [31:0] $end
$var reg 200 8 matrix_a [199:0] $end
$var reg 200 9 matrix_b [199:0] $end
$scope module alu_instance $end
$var wire 1 # clock $end
$var wire 200 : matrix_a [199:0] $end
$var wire 200 ; matrix_b [199:0] $end
$var wire 1 < mul_done $end
$var wire 200 = trs_m [199:0] $end
$var wire 200 > sub_m [199:0] $end
$var wire 1 3 start $end
$var wire 200 ? opp_m [199:0] $end
$var wire 4 @ op_code [3:0] $end
$var wire 200 A muls_m [199:0] $end
$var wire 200 B mul_m [199:0] $end
$var wire 1 5 done $end
$var wire 200 C add_m [199:0] $end
$var reg 200 D matrix_c [199:0] $end
$scope module add_op $end
$var wire 200 E matrix_a [199:0] $end
$var wire 200 F matrix_b [199:0] $end
$var wire 200 G matrix_c [199:0] $end
$scope begin matrix_add[0] $end
$upscope $end
$scope begin matrix_add[1] $end
$upscope $end
$scope begin matrix_add[2] $end
$upscope $end
$scope begin matrix_add[3] $end
$upscope $end
$scope begin matrix_add[4] $end
$upscope $end
$scope begin matrix_add[5] $end
$upscope $end
$scope begin matrix_add[6] $end
$upscope $end
$scope begin matrix_add[7] $end
$upscope $end
$scope begin matrix_add[8] $end
$upscope $end
$scope begin matrix_add[9] $end
$upscope $end
$scope begin matrix_add[10] $end
$upscope $end
$scope begin matrix_add[11] $end
$upscope $end
$scope begin matrix_add[12] $end
$upscope $end
$scope begin matrix_add[13] $end
$upscope $end
$scope begin matrix_add[14] $end
$upscope $end
$scope begin matrix_add[15] $end
$upscope $end
$scope begin matrix_add[16] $end
$upscope $end
$scope begin matrix_add[17] $end
$upscope $end
$scope begin matrix_add[18] $end
$upscope $end
$scope begin matrix_add[19] $end
$upscope $end
$scope begin matrix_add[20] $end
$upscope $end
$scope begin matrix_add[21] $end
$upscope $end
$scope begin matrix_add[22] $end
$upscope $end
$scope begin matrix_add[23] $end
$upscope $end
$scope begin matrix_add[24] $end
$upscope $end
$upscope $end
$scope module mul_op $end
$var wire 1 # clock $end
$var wire 1 < done $end
$var wire 200 H matrix_a [199:0] $end
$var wire 200 I matrix_b [199:0] $end
$var wire 1 3 start $end
$var reg 200 J matrix_r [199:0] $end
$var reg 3 K row [2:0] $end
$upscope $end
$scope module muls_op $end
$var wire 200 L matrix_a [199:0] $end
$var wire 8 M scalar [7:0] $end
$var wire 200 N matrix_c [199:0] $end
$scope begin matrix_muls[0] $end
$upscope $end
$scope begin matrix_muls[1] $end
$upscope $end
$scope begin matrix_muls[2] $end
$upscope $end
$scope begin matrix_muls[3] $end
$upscope $end
$scope begin matrix_muls[4] $end
$upscope $end
$scope begin matrix_muls[5] $end
$upscope $end
$scope begin matrix_muls[6] $end
$upscope $end
$scope begin matrix_muls[7] $end
$upscope $end
$scope begin matrix_muls[8] $end
$upscope $end
$scope begin matrix_muls[9] $end
$upscope $end
$scope begin matrix_muls[10] $end
$upscope $end
$scope begin matrix_muls[11] $end
$upscope $end
$scope begin matrix_muls[12] $end
$upscope $end
$scope begin matrix_muls[13] $end
$upscope $end
$scope begin matrix_muls[14] $end
$upscope $end
$scope begin matrix_muls[15] $end
$upscope $end
$scope begin matrix_muls[16] $end
$upscope $end
$scope begin matrix_muls[17] $end
$upscope $end
$scope begin matrix_muls[18] $end
$upscope $end
$scope begin matrix_muls[19] $end
$upscope $end
$scope begin matrix_muls[20] $end
$upscope $end
$scope begin matrix_muls[21] $end
$upscope $end
$scope begin matrix_muls[22] $end
$upscope $end
$scope begin matrix_muls[23] $end
$upscope $end
$scope begin matrix_muls[24] $end
$upscope $end
$upscope $end
$scope module opp_op $end
$var wire 200 O matrix_a [199:0] $end
$var wire 200 P matrix_c [199:0] $end
$scope module muls_opp $end
$var wire 200 Q matrix_a [199:0] $end
$var wire 8 R scalar [7:0] $end
$var wire 200 S matrix_c [199:0] $end
$scope begin matrix_muls[0] $end
$upscope $end
$scope begin matrix_muls[1] $end
$upscope $end
$scope begin matrix_muls[2] $end
$upscope $end
$scope begin matrix_muls[3] $end
$upscope $end
$scope begin matrix_muls[4] $end
$upscope $end
$scope begin matrix_muls[5] $end
$upscope $end
$scope begin matrix_muls[6] $end
$upscope $end
$scope begin matrix_muls[7] $end
$upscope $end
$scope begin matrix_muls[8] $end
$upscope $end
$scope begin matrix_muls[9] $end
$upscope $end
$scope begin matrix_muls[10] $end
$upscope $end
$scope begin matrix_muls[11] $end
$upscope $end
$scope begin matrix_muls[12] $end
$upscope $end
$scope begin matrix_muls[13] $end
$upscope $end
$scope begin matrix_muls[14] $end
$upscope $end
$scope begin matrix_muls[15] $end
$upscope $end
$scope begin matrix_muls[16] $end
$upscope $end
$scope begin matrix_muls[17] $end
$upscope $end
$scope begin matrix_muls[18] $end
$upscope $end
$scope begin matrix_muls[19] $end
$upscope $end
$scope begin matrix_muls[20] $end
$upscope $end
$scope begin matrix_muls[21] $end
$upscope $end
$scope begin matrix_muls[22] $end
$upscope $end
$scope begin matrix_muls[23] $end
$upscope $end
$scope begin matrix_muls[24] $end
$upscope $end
$upscope $end
$upscope $end
$scope module sub_op $end
$var wire 200 T matrix_a [199:0] $end
$var wire 200 U matrix_b [199:0] $end
$var wire 200 V matrix_c [199:0] $end
$scope begin matrix_sub[0] $end
$upscope $end
$scope begin matrix_sub[1] $end
$upscope $end
$scope begin matrix_sub[2] $end
$upscope $end
$scope begin matrix_sub[3] $end
$upscope $end
$scope begin matrix_sub[4] $end
$upscope $end
$scope begin matrix_sub[5] $end
$upscope $end
$scope begin matrix_sub[6] $end
$upscope $end
$scope begin matrix_sub[7] $end
$upscope $end
$scope begin matrix_sub[8] $end
$upscope $end
$scope begin matrix_sub[9] $end
$upscope $end
$scope begin matrix_sub[10] $end
$upscope $end
$scope begin matrix_sub[11] $end
$upscope $end
$scope begin matrix_sub[12] $end
$upscope $end
$scope begin matrix_sub[13] $end
$upscope $end
$scope begin matrix_sub[14] $end
$upscope $end
$scope begin matrix_sub[15] $end
$upscope $end
$scope begin matrix_sub[16] $end
$upscope $end
$scope begin matrix_sub[17] $end
$upscope $end
$scope begin matrix_sub[18] $end
$upscope $end
$scope begin matrix_sub[19] $end
$upscope $end
$scope begin matrix_sub[20] $end
$upscope $end
$scope begin matrix_sub[21] $end
$upscope $end
$scope begin matrix_sub[22] $end
$upscope $end
$scope begin matrix_sub[23] $end
$upscope $end
$scope begin matrix_sub[24] $end
$upscope $end
$upscope $end
$scope module trs_op $end
$var wire 200 W matrix_a [199:0] $end
$var wire 200 X matrix_c [199:0] $end
$scope begin matrix_trs_row[0] $end
$scope begin matrix_trs_col[0] $end
$upscope $end
$scope begin matrix_trs_col[1] $end
$upscope $end
$scope begin matrix_trs_col[2] $end
$upscope $end
$scope begin matrix_trs_col[3] $end
$upscope $end
$scope begin matrix_trs_col[4] $end
$upscope $end
$upscope $end
$scope begin matrix_trs_row[1] $end
$scope begin matrix_trs_col[0] $end
$upscope $end
$scope begin matrix_trs_col[1] $end
$upscope $end
$scope begin matrix_trs_col[2] $end
$upscope $end
$scope begin matrix_trs_col[3] $end
$upscope $end
$scope begin matrix_trs_col[4] $end
$upscope $end
$upscope $end
$scope begin matrix_trs_row[2] $end
$scope begin matrix_trs_col[0] $end
$upscope $end
$scope begin matrix_trs_col[1] $end
$upscope $end
$scope begin matrix_trs_col[2] $end
$upscope $end
$scope begin matrix_trs_col[3] $end
$upscope $end
$scope begin matrix_trs_col[4] $end
$upscope $end
$upscope $end
$scope begin matrix_trs_row[3] $end
$scope begin matrix_trs_col[0] $end
$upscope $end
$scope begin matrix_trs_col[1] $end
$upscope $end
$scope begin matrix_trs_col[2] $end
$upscope $end
$scope begin matrix_trs_col[3] $end
$upscope $end
$scope begin matrix_trs_col[4] $end
$upscope $end
$upscope $end
$scope begin matrix_trs_row[4] $end
$scope begin matrix_trs_col[0] $end
$upscope $end
$scope begin matrix_trs_col[1] $end
$upscope $end
$scope begin matrix_trs_col[2] $end
$upscope $end
$scope begin matrix_trs_col[3] $end
$upscope $end
$scope begin matrix_trs_col[4] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module control_instance $end
$var wire 1 5 alu_done $end
$var wire 1 # clock $end
$var wire 32 Y instruction [31:0] $end
$var wire 16 Z mem_data_in [15:0] $end
$var wire 16 [ values [15:0] $end
$var wire 3 \ row [2:0] $end
$var wire 4 ] op_code [3:0] $end
$var wire 1 * mem_done $end
$var wire 6 ^ mem_address [5:0] $end
$var wire 5 _ index [4:0] $end
$var wire 2 ` id [1:0] $end
$var wire 3 a col [2:0] $end
$var wire 5 b buffer_index [4:0] $end
$var wire 2 c buffer_id [1:0] $end
$var wire 6 d address [5:0] $end
$var reg 1 e alu_dumped $end
$var reg 1 4 alu_dumping $end
$var reg 1 f alu_loaded $end
$var reg 1 g alu_loading $end
$var reg 1 3 alu_start $end
$var reg 2 h id_count [1:0] $end
$var reg 5 i index_count [4:0] $end
$var reg 1 ) mem_start $end
$var reg 1 ( mem_write_enabled $end
$var reg 3 j stage [2:0] $end
$scope module decoder_instance $end
$var wire 32 k instruction [31:0] $end
$var wire 16 l values [15:0] $end
$var wire 3 m row [2:0] $end
$var wire 4 n op_code [3:0] $end
$var wire 5 o index [4:0] $end
$var wire 2 p id [1:0] $end
$var wire 3 q col [2:0] $end
$var wire 6 r address [5:0] $end
$upscope $end
$upscope $end
$scope module mmu_instance $end
$var wire 6 s address [5:0] $end
$var wire 1 # clock $end
$var wire 16 t data_in [15:0] $end
$var wire 1 ) start $end
$var wire 1 ( write_enabled $end
$var wire 16 u data_out [15:0] $end
$var reg 2 v count [1:0] $end
$var reg 1 * done $end
$scope module mem $end
$var wire 6 w address [5:0] $end
$var wire 1 # clock $end
$var wire 16 x data_in [15:0] $end
$var wire 16 y data_out [15:0] $end
$var wire 1 ( write_enabled $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
xg
xf
xe
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzx X
bx W
bx V
bx U
bx T
bx S
b11111111 R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzxzzzzzzzx =
z<
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
x5
x4
x3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
x*
x)
x(
bx '
b0 &
0%
b0 $
0#
bx "
x!
$end
#5000
b0 j
0*
1#
#10000
0#
#15000
1#
#20000
0#
#25000
1#
#30000
0#
#35000
1#
#40000
0#
#45000
b10100101101001010101101001011010 $
b10100101101001010101101001011010 &
1#
#50000
0#
#55000
15
b0 "
b0 2
0!
b1010 '
b1010 @
b1010 ]
b1010 n
b10101 d
b10101 r
b1 `
b1 p
b1000 _
b1000 o
b11 \
b11 m
b10 a
b10 q
b101010110100101 /
b101010110100101 Z
b101010110100101 [
b101010110100101 l
b10100101101001010101101001011010 7
b10100101101001010101101001011010 Y
b10100101101001010101101001011010 k
1%
1#
#60000
0#
#65000
b1 j
0%
1#
#70000
0#
#75000
b10 j
1#
#80000
0#
#85000
b10 1
b10 c
b11 j
0f
0g
1#
#90000
0#
#95000
b10101 -
b10101 ^
b10101 s
b10101 w
b101010110100101 ,
b101010110100101 t
b101010110100101 x
b0 j
0e
04
b10 h
1#
#100000
0#
#105000
b1 j
1#
#110000
0#
#115000
b10 j
1#
#120000
0#
#125000
bx -
bx ^
bx s
bx w
1f
1g
1#
#130000
0#
#135000
b10101 -
b10101 ^
b10101 s
b10101 w
b11 j
0f
0g
1#
#140000
0#
#145000
bx -
bx ^
bx s
bx w
bx ,
bx t
bx x
1e
14
1#
#150000
0#
#155000
b10101 -
b10101 ^
b10101 s
b10101 w
b101010110100101 ,
b101010110100101 t
b101010110100101 x
b0 j
0e
04
1#
#160000
0#
#165000
b1 j
1#
#170000
0#
#175000
b10 j
1#
#180000
0#
#185000
bx -
bx ^
bx s
bx w
1f
1g
1#
#190000
0#
#195000
b10101 -
b10101 ^
b10101 s
b10101 w
b11 j
0f
0g
1#
#200000
0#
#205000
bx -
bx ^
bx s
bx w
bx ,
bx t
bx x
1e
14
1#
#210000
0#
#215000
b10101 -
b10101 ^
b10101 s
b10101 w
b101010110100101 ,
b101010110100101 t
b101010110100101 x
b0 j
0e
04
1#
#220000
0#
#225000
b1 j
1#
#230000
0#
#235000
b10 j
1#
#240000
0#
#245000
bx -
bx ^
bx s
bx w
1f
1g
1#
#250000
0#
#255000
b10101 -
b10101 ^
b10101 s
b10101 w
b11 j
0f
0g
1#
#260000
0#
#265000
bx -
bx ^
bx s
bx w
bx ,
bx t
bx x
1e
14
b11011110101011011011111011101111 $
b11011110101011011011111011101111 &
1#
#270000
0#
#275000
b111111 -
b111111 ^
b111111 s
b111111 w
b1101 '
b1101 @
b1101 ]
b1101 n
b11 `
b11 p
b111111 d
b111111 r
b11000 _
b11000 o
b101 \
b101 m
b1101101111101110 /
b1101101111101110 Z
b1101101111101110 [
b1101101111101110 l
b1101101111101110 ,
b1101101111101110 t
b1101101111101110 x
b11011110101011011011111011101111 7
b11011110101011011011111011101111 Y
b11011110101011011011111011101111 k
b0 j
0e
04
1%
1#
#280000
0#
#285000
b1 j
0%
1#
#290000
0#
#295000
b10 j
1#
#300000
0#
#305000
bx -
bx ^
bx s
bx w
1f
1g
1#
#310000
0#
#315000
b111111 -
b111111 ^
b111111 s
b111111 w
b11 j
0f
0g
1#
#320000
0#
#325000
bx -
bx ^
bx s
bx w
bx ,
bx t
bx x
1e
14
1#
#330000
0#
#335000
b111111 -
b111111 ^
b111111 s
b111111 w
b1101101111101110 ,
b1101101111101110 t
b1101101111101110 x
b0 j
0e
04
1#
#340000
0#
#345000
b1 j
1#
#350000
0#
#355000
b10 j
1#
#360000
0#
#365000
bx -
bx ^
bx s
bx w
1f
1g
1#
#370000
0#
#375000
b111111 -
b111111 ^
b111111 s
b111111 w
b11 j
0f
0g
1#
#380000
0#
#385000
bx -
bx ^
bx s
bx w
bx ,
bx t
bx x
1e
14
1#
#390000
0#
#395000
b111111 -
b111111 ^
b111111 s
b111111 w
b1101101111101110 ,
b1101101111101110 t
b1101101111101110 x
b0 j
0e
04
1#
#400000
0#
#405000
b1 j
1#
#410000
0#
#415000
b10 j
1#
#420000
0#
#425000
bx -
bx ^
bx s
bx w
1f
1g
1#
#430000
0#
#435000
b111111 -
b111111 ^
b111111 s
b111111 w
b11 j
0f
0g
1#
#440000
0#
#445000
bx -
bx ^
bx s
bx w
bx ,
bx t
bx x
1e
14
1#
#450000
0#
#455000
b111111 -
b111111 ^
b111111 s
b111111 w
b1101101111101110 ,
b1101101111101110 t
b1101101111101110 x
b0 j
0e
04
1#
#460000
0#
#465000
b1 j
1#
#470000
0#
#475000
b10 j
1#
#480000
0#
#485000
bx -
bx ^
bx s
bx w
1f
1g
1#
#490000
0#
#495000
b111111 -
b111111 ^
b111111 s
b111111 w
b11 j
0f
0g
1#
#500000
0#
#505000
bx -
bx ^
bx s
bx w
bx ,
bx t
bx x
1e
14
1#
#510000
0#
#515000
b111111 -
b111111 ^
b111111 s
b111111 w
b1101101111101110 ,
b1101101111101110 t
b1101101111101110 x
b0 j
0e
04
1#
#520000
0#
#525000
b1 j
1#
#530000
0#
#535000
b10 j
1#
#540000
0#
#545000
bx -
bx ^
bx s
bx w
1f
1g
1#
#550000
0#
#555000
b111111 -
b111111 ^
b111111 s
b111111 w
b11 j
0f
0g
1#
#560000
0#
#565000
bx -
bx ^
bx s
bx w
bx ,
bx t
bx x
1e
14
1#
#570000
0#
#575000
b111111 -
b111111 ^
b111111 s
b111111 w
b1101101111101110 ,
b1101101111101110 t
b1101101111101110 x
b0 j
0e
04
1#
#580000
0#
#585000
b1 j
1#
#590000
0#
#595000
b10 j
1#
#600000
0#
#605000
bx -
bx ^
bx s
bx w
1f
1g
1#
#610000
0#
#615000
b111111 -
b111111 ^
b111111 s
b111111 w
b11 j
0f
0g
1#
#620000
0#
#625000
bx -
bx ^
bx s
bx w
bx ,
bx t
bx x
1e
14
1#
#630000
0#
#635000
b111111 -
b111111 ^
b111111 s
b111111 w
b1101101111101110 ,
b1101101111101110 t
b1101101111101110 x
b0 j
0e
04
1#
#640000
0#
#645000
b1 j
1#
#650000
0#
#655000
b10 j
1#
#660000
0#
#665000
bx -
bx ^
bx s
bx w
1f
1g
1#
#670000
0#
#675000
b111111 -
b111111 ^
b111111 s
b111111 w
b11 j
0f
0g
1#
#680000
0#
#685000
bx -
bx ^
bx s
bx w
bx ,
bx t
bx x
1e
14
1#
#690000
0#
#695000
b111111 -
b111111 ^
b111111 s
b111111 w
b1101101111101110 ,
b1101101111101110 t
b1101101111101110 x
b0 j
0e
04
1#
#700000
0#
#705000
b1 j
1#
#710000
0#
#715000
b10 j
1#
#720000
0#
#725000
bx -
bx ^
bx s
bx w
1f
1g
1#
#730000
0#
#735000
b111111 -
b111111 ^
b111111 s
b111111 w
b11 j
0f
0g
1#
#740000
0#
#745000
bx -
bx ^
bx s
bx w
bx ,
bx t
bx x
1e
14
1#
#750000
0#
#755000
b111111 -
b111111 ^
b111111 s
b111111 w
b1101101111101110 ,
b1101101111101110 t
b1101101111101110 x
b0 j
0e
04
1#
#760000
0#
#765000
b1 j
1#
#770000
0#
#775000
b10 j
1#
#780000
0#
#785000
bx -
bx ^
bx s
bx w
1f
1g
1#
